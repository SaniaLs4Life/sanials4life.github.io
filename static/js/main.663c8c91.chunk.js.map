{"version":3,"sources":["components/MenuBar.js","components/Skeleton.js","components/UserItem.js","components/SearchField.js","components/NoResultFound.js","components/Dashboard.js","components/CreateUserForm.js","App.js","ApolloProvider.js","index.js"],"names":["MenuBar","useState","activeItem","setActiveItem","handleItemClick","e","name","Menu","stackable","style","marginTop","Item","header","position","active","onClick","Skeleton","Placeholder","fluid","Header","image","Line","Paragraph","UserItem","result","console","log","Group","divided","map","i","key","Image","size","src","Content","sector","Meta","className","companyName","description","Description","Extra","facebookLink","Label","as","href","target","icon","content","instagramLink","address","telephone","language","moment","createdAt","fromNow","languageOptions","text","value","mapOptions","GET_SINGLE_USER","gql","SearchField","setSearch","setLanguage","setMap","setSector","user","useQuery","variables","data","getUser","Grid","Row","Column","width","Dropdown","placeholder","noResultsMessage","search","onChange","selection","clearable","floating","options","Input","iconPosition","action","Button","color","Icon","NoResultFound","Segment","primary","FETCH_USER_QUERY","Dashboard","setResult","loading","users","getUsers","useEffect","Fragment","length","ADD_NEW_USER","CreateUserForm","formData","setFormData","success","setSuccess","useMutation","addUser","error","handleChange","values","Message","Form","widths","Field","required","control","label","Select","resize","TextArea","disabled","App","Container","exact","path","component","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.663c8c91.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nconst MenuBar = () => {\r\n  const [activeItem, setActiveItem] = useState(\"home\");\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n  return (\r\n    <Menu stackable style={{ marginTop: \"5px\" }}>\r\n      <Menu.Item header>Find It</Menu.Item>\r\n\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item\r\n          name=\"home\"\r\n          active={activeItem === \"home\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          Home\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name=\"about\"\r\n          active={activeItem === \"about\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          About\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name=\"contact\"\r\n          active={activeItem === \"contact\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          Contact\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react'\r\nimport { Placeholder } from 'semantic-ui-react'\r\n\r\nconst Skeleton = () => (\r\n  <Placeholder fluid>\r\n    <Placeholder.Header image>\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n    </Placeholder.Header>\r\n    <Placeholder.Paragraph>\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n    </Placeholder.Paragraph>\r\n  </Placeholder>\r\n)\r\n\r\nexport default Skeleton","import React from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nconst UserItem = ({ result }) => {\r\n  console.log(result)\r\n  return (\r\n    <Item.Group divided>\r\n      {result &&\r\n        result.map((e, i) => (\r\n          <Item key={i}>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              src=\"https://www.freeiconspng.com/uploads/flat-user-icon-11.png\"\r\n            />\r\n\r\n            <Item.Content>\r\n              <Item.Header>{e.sector}</Item.Header>\r\n              <Item.Meta>\r\n                <span className=\"price\">\r\n                  <b>{e.companyName}</b>\r\n                </span>\r\n              </Item.Meta>\r\n              {e.description && (\r\n                <Item.Description>{e.description}</Item.Description>\r\n              )}\r\n              <Item.Extra>\r\n                {e.facebookLink && <Label as='a' href={e.facebookLink} target='_blank' icon='facebook' content={e.facebookLink} />}\r\n                {e.instagramLink && <Label as='a' href={e.instagramLink} target='_blank' icon='instagram' content={e.instagramLink} />}\r\n                <Label icon=\"address card\" content={e.address} />\r\n                <Label icon=\"mobile alternate\" content={e.telephone} />\r\n                <Label icon=\"language\" content={e.language} />\r\n                <Label icon=\"location arrow\" content={e.map} />\r\n                <Label icon=\"time\" content={moment(e.createdAt).fromNow()} />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n    </Item.Group>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  Grid,\r\n  Dropdown,\r\n  Icon,\r\n  Label,\r\n  Button,\r\n  Header\r\n} from \"semantic-ui-react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst languageOptions = [\r\n  { key: \"English\", text: \"English\", value: \"English\" },\r\n  { key: \"German\", text: \"German\", value: \"German\" },\r\n  { key: \"Polish\", text: \"Polish\", value: \"Polish\" }\r\n];\r\n\r\nconst mapOptions = [\r\n  { key: \"Wroclaw\", text: \"Wroclaw\", value: \"Wroclaw\" },\r\n  { key: \"Poznan\", text: \"Poznan\", value: \"Poznan\" },\r\n  { key: \"Krakow\", text: \"Krakow\", value: \"Krakow\" },\r\n  { key: \"Warsaw\", text: \"Warsaw\", value: \"Warsaw\" }\r\n];\r\n\r\n\r\n\r\nconst SearchField = ({\r\n  setSearch\r\n}) => {\r\n  \r\n  \r\n  const [language, setLanguage] = useState(\"\");\r\n  const [map, setMap] = useState(\"\");\r\n  const [sector, setSector] = useState(\"\");\r\n  const _handleChangeLanguage = (e, { value }) => {\r\n    setLanguage(value);\r\n  };\r\n  const _handleChangeMap = (e, { value }) => {\r\n    setMap(value);\r\n  };\r\n\r\n  const _handleChangeSearch = (e, { value }) => {\r\n    setSector(value);\r\n  };\r\n  \r\n  const _handleSubmit = () => {\r\n    if (user) {\r\n      setSearch(user);\r\n    }\r\n  };\r\n\r\n  \r\n  const {\r\n    data: { getUser: user }\r\n  } = useQuery(GET_SINGLE_USER, {\r\n    variables: { sector, language, map }\r\n  });\r\n  return (\r\n    <Grid>\r\n      <Grid.Row>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"Select a language\"\r\n            header=\"Select a language\"\r\n            noResultsMessage=\"No result found\"\r\n            search\r\n            onChange={_handleChangeLanguage}\r\n            selection\r\n            clearable\r\n            floating\r\n            fluid\r\n            value={language}\r\n            options={languageOptions}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Input\r\n            icon=\"search\"\r\n            iconPosition=\"left\"\r\n            fluid\r\n            value={sector}\r\n            onChange={_handleChangeSearch}\r\n            placeholder=\"What are you looking for?\"\r\n            action={\r\n              <Button color=\"blue\" onClick={_handleSubmit}>\r\n                <Icon name=\"search\" />\r\n                Search\r\n              </Button>\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"Select a map\"\r\n            header=\"Select a map\"\r\n            noResultsMessage=\"No result found\"\r\n            search\r\n            onChange={_handleChangeMap}\r\n            floating\r\n            fluid\r\n            selection\r\n            clearable\r\n            value={map}\r\n            options={mapOptions}\r\n          />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Header as=\"h4\" icon=\"filter\" content=\"Filtered: \" />\r\n          {map && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"map\" />\r\n              {map}\r\n            </Label>\r\n          )}\r\n          {language && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"language\" />\r\n              {language}\r\n            </Label>\r\n          )}\r\n          {sector && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"search\" />\r\n              {sector}\r\n            </Label>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nconst GET_SINGLE_USER = gql`\r\n  query getUser($sector: String, $language: String, $map: String) {\r\n    getUser(sector: $sector, language: $language, map: $map) {\r\n      language\r\n      sector\r\n      companyName\r\n      address\r\n      telephone\r\n      map\r\n      description\r\n      facebookLink\r\n      instagramLink\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nconst NoResultFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"pdf file outline\" />\r\n        Sorry, we could not find the customer. <br />\r\n        Is that you?\r\n      </Header>\r\n      <Button primary>Apply now</Button>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NoResultFound;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport UserItem from \"./UserItem\";\r\nimport SearchField from \"./SearchField\";\r\nimport NoResultFound from \"./NoResultFound\";\r\n\r\nconst Dashboard = () => {\r\n  const [result, setResult] = useState([]);\r\n  const {\r\n    loading,\r\n    data: { getUsers: users }\r\n  } = useQuery(FETCH_USER_QUERY);\r\n\r\n  useEffect(() => {\r\n    setResult(users);\r\n  }, [users]);\r\n\r\n  const setSearch = result => {\r\n    setResult(result);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <>\r\n        <Skeleton />\r\n      </>\r\n    );\r\n  return (\r\n    <React.Fragment>\r\n      <SearchField setSearch={setSearch} />\r\n      <Grid style={{ marginTop: \"5px\" }}>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            {result && result.length > 0 ? (\r\n              <Segment>\r\n                <UserItem result={result} />\r\n              </Segment>\r\n            ) : (\r\n              <NoResultFound />\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  {\r\n    getUsers {\r\n      language\r\n      sector\r\n      companyName\r\n      address\r\n      telephone\r\n      map\r\n      description\r\n      facebookLink\r\n      instagramLink\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  TextArea,\r\n  Header,\r\n  Message\r\n} from \"semantic-ui-react\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst languageOptions = [\r\n  { key: \"English\", text: \"English\", value: \"English\" },\r\n  { key: \"German\", text: \"German\", value: \"German\" },\r\n  { key: \"Polish\", text: \"Polish\", value: \"Polish\" }\r\n];\r\n\r\nconst mapOptions = [\r\n  { key: \"Wroclaw\", text: \"Wroclaw\", value: \"Wroclaw\" },\r\n  { key: \"Poznan\", text: \"Poznan\", value: \"Poznan\" },\r\n  { key: \"Krakow\", text: \"Krakow\", value: \"Krakow\" },\r\n  { key: \"Warsaw\", text: \"Warsaw\", value: \"Warsaw\" }\r\n];\r\n\r\nconst CreateUserForm = () => {\r\n  const [formData, setFormData] = useState({});\r\n  const [success, setSuccess] = useState(false);\r\n\r\n  const [addUser, { loading, error, data }] = useMutation(ADD_NEW_USER);\r\n\r\n  const handleChange = (e, { value, name }) => {\r\n    setFormData(values => ({\r\n      ...values,\r\n      [name]: value\r\n    }));\r\n    setSuccess(false);\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    addUser({ variables: formData });\r\n    setFormData({});\r\n    setSuccess(true);\r\n  };\r\n  if (error) {\r\n    return <Message error header=\"Error\" content=\"Error occured!\" />;\r\n  }\r\n  return (\r\n    <>\r\n      <Header>CREATE A NEW USER</Header>\r\n      <Form success loading={loading}>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field\r\n            required\r\n            control={Input}\r\n            name=\"companyName\"\r\n            value={formData.companyName || \"\"}\r\n            onChange={handleChange}\r\n            label=\"Company Name\"\r\n            placeholder=\"Company Name\"\r\n          />\r\n          <Form.Field\r\n            required\r\n            control={Input}\r\n            label=\"Sector\"\r\n            value={formData.sector || \"\"}\r\n            name=\"sector\"\r\n            onChange={handleChange}\r\n            placeholder=\"Sector\"\r\n          />\r\n          <Form.Field\r\n            required\r\n            control={Select}\r\n            label=\"Language\"\r\n            name=\"language\"\r\n            value={formData.language || \"\"}\r\n            onChange={handleChange}\r\n            placeholder=\"Language\"\r\n            options={languageOptions}\r\n          />\r\n          <Form.Field\r\n            required\r\n            control={Select}\r\n            label=\"Location\"\r\n            name=\"map\"\r\n            value={formData.map || \"\"}\r\n            onChange={handleChange}\r\n            options={mapOptions}\r\n            placeholder=\"Location\"\r\n          />\r\n        </Form.Group>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <Form.Field\r\n              required\r\n              control={Input}\r\n              label=\"Phone\"\r\n              value={formData.telephone || \"\"}\r\n              name=\"telephone\"\r\n              onChange={handleChange}\r\n              placeholder=\"Phone\"\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Form.Field\r\n              required\r\n              control={Input}\r\n              name=\"address\"\r\n              value={formData.address || \"\"}\r\n              onChange={handleChange}\r\n              label=\"Address\"\r\n              placeholder=\"Address\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Group widths=\"equal\">\r\n          <Form.Field>\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Facebook Link\"\r\n              name=\"facebookLink\"\r\n              value={formData.facebookLink || \"\"}\r\n              onChange={handleChange}\r\n              placeholder=\"Facebook Link\"\r\n            />\r\n          </Form.Field>\r\n          <Form.Field>\r\n            <Form.Field\r\n              control={Input}\r\n              label=\"Instagram Link\"\r\n              name=\"instagramLink\"\r\n              value={formData.instagramLink || \"\"}\r\n              onChange={handleChange}\r\n              placeholder=\"Instagram Link\"\r\n            />\r\n          </Form.Field>\r\n        </Form.Group>\r\n        <Form.Field\r\n          style={{ resize: \"none\" }}\r\n          control={TextArea}\r\n          name=\"description\"\r\n          value={formData.description || \"\"}\r\n          onChange={handleChange}\r\n          label=\"Description\"\r\n          placeholder=\"Tell us more about you...\"\r\n        />\r\n        <Form.Field\r\n          control={Button}\r\n          disabled={\r\n            formData.companyName &&\r\n            formData.sector &&\r\n            formData.language &&\r\n            formData.address &&\r\n            formData.telephone &&\r\n            formData.map\r\n              ? false\r\n              : true\r\n          }\r\n          onClick={handleSubmit}\r\n          loading={loading}\r\n        >\r\n          Create User\r\n        </Form.Field>\r\n        {success && (\r\n          <Message\r\n            success\r\n            header=\"Success\"\r\n            content={`New user ${data && data.addUser && data.addUser.companyName} has been created`}\r\n          />\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nconst ADD_NEW_USER = gql`\r\n  mutation addUser(\r\n    $language: String!\r\n    $sector: String!\r\n    $companyName: String!\r\n    $address: String!\r\n    $telephone: String!\r\n    $map: String!\r\n    $facebookLink: String\r\n    $instagramLink: String\r\n    $description: String\r\n  ) {\r\n    addUser(\r\n      userInput: {\r\n        language: $language\r\n        sector: $sector\r\n        companyName: $companyName\r\n        address: $address\r\n        telephone: $telephone\r\n        map: $map\r\n        facebookLink: $facebookLink\r\n        instagramLink: $instagramLink\r\n        description: $description\r\n      }\r\n    ) {\r\n      companyName\r\n    }\r\n  }\r\n`;\r\n\r\nexport default CreateUserForm;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuBar from \"./components/MenuBar\";\nimport { Container } from \"semantic-ui-react\";\nimport Dashboard from \"./components/Dashboard\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport CreateUserForm from \"./components/CreateUserForm\";\n\nfunction App() {\n  return (\n    <Container>\n      <Router>\n      <MenuBar />\n      <Route exact path=\"/\" component={Dashboard} />\n      <Route exact path=\"/create-new-user\" component={CreateUserForm} />\n      </Router>\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://findit-backend-hopmbwwbj.now.sh/\"\r\n  // uri: 'http://localhost:5000/'\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n"],"sourceRoot":""}