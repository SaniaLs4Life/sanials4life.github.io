{"version":3,"sources":["components/MenuBar.js","components/Skeleton.js","components/UserItem.js","components/SearchField.js","components/Dashboard.js","App.js","ApolloProvider.js","index.js"],"names":["MenuBar","useState","activeItem","setActiveItem","handleItemClick","e","name","Menu","stackable","style","marginTop","Item","src","alt","header","position","active","onClick","Skeleton","Placeholder","fluid","Header","image","Line","Paragraph","UserItem","result","Group","divided","map","i","key","Image","size","Content","sector","Meta","className","companyName","Description","description","Extra","facebookLink","Label","instagramLink","icon","content","telephone","language","languageOptions","text","value","mapOptions","GET_SINGLE_USER","gql","SearchField","setSearch","setLanguage","setMap","setSector","useQuery","variables","error","loading","user","data","getUser","Grid","Row","Column","width","Dropdown","placeholder","noResultsMessage","search","onChange","selection","clearable","floating","options","Input","iconPosition","action","Button","color","console","log","Icon","as","FETCH_USER_QUERY","Dashboard","setResult","users","getUsers","useEffect","Fragment","Segment","App","Container","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.4d23500b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nconst MenuBar = () => {\r\n  const [activeItem, setActiveItem] = useState(\"home\");\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n  return (\r\n    <Menu stackable style={{ marginTop: \"5px\" }}>\r\n      <Menu.Item>\r\n        <img\r\n          src=\"https://cdn0.iconfinder.com/data/icons/small-n-flat/24/678111-map-marker-512.png\"\r\n          alt=\"findit\"\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Item header>Find It</Menu.Item>\r\n\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item\r\n          name=\"home\"\r\n          active={activeItem === \"home\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          Home\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name=\"about\"\r\n          active={activeItem === \"about\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          About\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name=\"contact\"\r\n          active={activeItem === \"contact\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          Contact\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react'\r\nimport { Placeholder } from 'semantic-ui-react'\r\n\r\nconst Skeleton = () => (\r\n  <Placeholder fluid>\r\n    <Placeholder.Header image>\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n    </Placeholder.Header>\r\n    <Placeholder.Paragraph>\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n    </Placeholder.Paragraph>\r\n  </Placeholder>\r\n)\r\n\r\nexport default Skeleton","import React from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\n\r\nconst UserItem = ({ result }) => {\r\n  return (\r\n    <Item.Group divided>\r\n      {result &&\r\n        result.map((e, i) => (\r\n          <Item key={i}>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              src=\"https://www.freeiconspng.com/uploads/flat-user-icon-11.png\"\r\n            />\r\n\r\n            <Item.Content>\r\n              <Item.Header>{e.sector}</Item.Header>\r\n              <Item.Meta>\r\n                <span className=\"price\">\r\n                  <b>{e.companyName}</b>\r\n                </span>\r\n              </Item.Meta>\r\n              <Item.Description>{e.description}</Item.Description>\r\n              <Item.Extra>\r\n                {e.facebookLink && <Label>{e.facebookLink}</Label>}\r\n                {e.instagramLink && <Label>{e.instagramLink}</Label>}\r\n                <Label icon=\"mobile alternate\" content={e.telephone} />\r\n                <Label icon=\"globe\" content={e.language} />\r\n                <Label icon=\"location arrow\" content={e.map} />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n    </Item.Group>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  Grid,\r\n  Dropdown,\r\n  Icon,\r\n  Label,\r\n  Button,\r\n  Header\r\n} from \"semantic-ui-react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport { Placeholder } from 'semantic-ui-react'\r\nimport Skeleton from \"./Skeleton\";\r\n\r\nconst languageOptions = [\r\n  { key: \"English\", text: \"English\", value: \"English\" },\r\n  { key: \"German\", text: \"German\", value: \"German\" },\r\n  { key: \"Polish\", text: \"Polish\", value: \"Polish\" }\r\n];\r\n\r\nconst mapOptions = [\r\n  { key: \"Wroclaw\", text: \"Wroclaw\", value: \"Wroclaw\" },\r\n  { key: \"Poznan\", text: \"Poznan\", value: \"Poznan\" },\r\n  { key: \"Krakow\", text: \"Krakow\", value: \"Krakow\" },\r\n  { key: \"Warsaw\", text: \"Warsaw\", value: \"Warsaw\" }\r\n];\r\n\r\n\r\n\r\nconst SearchField = ({\r\n  setSearch\r\n}) => {\r\n  \r\n  \r\n  const [language, setLanguage] = useState(\"\");\r\n  const [map, setMap] = useState(\"\");\r\n  const [sector, setSector] = useState(\"\");\r\n  const _handleChangeLanguage = (e, { value }) => {\r\n    setLanguage(value);\r\n  };\r\n  const _handleChangeMap = (e, { value }) => {\r\n    setMap(value);\r\n  };\r\n\r\n  const _handleChangeSearch = (e, { value }) => {\r\n    setSector(value);\r\n  };\r\n  \r\n  const _handleSubmit = () => {\r\n    console.log(\"User\", user);\r\n    if (user) {\r\n      setSearch(user);\r\n    }\r\n  };\r\n\r\n  \r\n  const {\r\n    loading,\r\n    error,\r\n    data: { getUser: user }\r\n  } = useQuery(GET_SINGLE_USER, {\r\n    variables: { sector, language, map }\r\n  });\r\n  if(error) return <div>Error</div>\r\n  return (\r\n    <Grid>\r\n      <Grid.Row>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"Select a language\"\r\n            header=\"Select a language\"\r\n            noResultsMessage=\"No result found\"\r\n            search\r\n            onChange={_handleChangeLanguage}\r\n            selection\r\n            clearable\r\n            floating\r\n            fluid\r\n            value={language}\r\n            options={languageOptions}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Input\r\n            icon=\"search\"\r\n            iconPosition=\"left\"\r\n            fluid\r\n            value={sector}\r\n            onChange={_handleChangeSearch}\r\n            placeholder=\"What are you looking for?\"\r\n            action={\r\n              <Button color=\"blue\" onClick={_handleSubmit}>\r\n                <Icon name=\"search\" />\r\n                Search\r\n              </Button>\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"Select a map\"\r\n            header=\"Select a map\"\r\n            noResultsMessage=\"No result found\"\r\n            search\r\n            onChange={_handleChangeMap}\r\n            floating\r\n            fluid\r\n            selection\r\n            clearable\r\n            value={map}\r\n            options={mapOptions}\r\n          />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Header as=\"h4\" icon=\"filter\" content=\"Filtered: \" />\r\n          {map && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"map\" />\r\n              {map}\r\n            </Label>\r\n          )}\r\n          {language && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"language\" />\r\n              {language}\r\n            </Label>\r\n          )}\r\n          {sector && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"search\" />\r\n              {sector}\r\n            </Label>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nconst GET_SINGLE_USER = gql`\r\n  query getUser($sector: String, $language: String, $map: String) {\r\n    getUser(sector: $sector, language: $language, map: $map) {\r\n      language\r\n      sector\r\n      companyName\r\n      address\r\n      telephone\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SearchField;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport UserItem from \"./UserItem\";\r\nimport SearchField from \"./SearchField\";\r\n\r\nconst Dashboard = () => {\r\n  const [result, setResult] = useState([]);\r\n  const {\r\n    loading,\r\n    data: { getUsers: users }\r\n  } = useQuery(FETCH_USER_QUERY);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Users\", users);\r\n    setResult(users);\r\n  }, [users]);\r\n\r\n\r\n  const setSearch = (result) => {\r\n    setResult(result);\r\n  }\r\n  if(loading) return (\r\n    <>\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton />\r\n      <Skeleton />\r\n    </>\r\n  )\r\n  return (\r\n    <React.Fragment>\r\n      <SearchField\r\n        setSearch={setSearch}\r\n      />\r\n      <Grid style={{ marginTop: \"5px\" }}>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            <Segment>{result && <UserItem result={result} />}</Segment>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  {\r\n    getUsers {\r\n      language\r\n      sector\r\n      companyName\r\n      address\r\n      telephone\r\n    }\r\n  }\r\n`;\r\n\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuBar from \"./components/MenuBar\";\nimport { Container } from \"semantic-ui-react\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <Container>\n      <MenuBar />\n      <Dashboard />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconst httpLink = createHttpLink({\r\n  uri: \"https://findit-backend.hakangenc.now.sh\"\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n"],"sourceRoot":""}