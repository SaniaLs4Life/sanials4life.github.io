{"version":3,"sources":["components/MenuBar.js","components/Skeleton.js","components/UserItem.js","components/SearchField.js","components/NoResultFound.js","components/Dashboard.js","App.js","ApolloProvider.js","index.js"],"names":["MenuBar","useState","activeItem","setActiveItem","handleItemClick","e","name","Menu","stackable","style","marginTop","Item","header","position","active","onClick","Skeleton","Placeholder","fluid","Header","image","Line","Paragraph","UserItem","result","Group","divided","map","i","key","Image","size","src","Content","sector","Meta","className","companyName","description","Description","Extra","facebookLink","Label","instagramLink","icon","content","address","telephone","language","moment","createdAt","fromNow","languageOptions","text","value","mapOptions","GET_SINGLE_USER","gql","SearchField","setSearch","setLanguage","setMap","setSector","user","useQuery","variables","data","getUser","Grid","Row","Column","width","Dropdown","placeholder","noResultsMessage","search","onChange","selection","clearable","floating","options","Input","iconPosition","action","Button","color","Icon","as","NoResultFound","Segment","primary","FETCH_USER_QUERY","Dashboard","setResult","loading","users","getUsers","useEffect","Fragment","length","App","Container","httpLink","createHttpLink","uri","client","ApolloClient","link","cache","InMemoryCache","ReactDOM","render","ApolloProvider","document","getElementById"],"mappings":"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","file":"static/js/main.52715002.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nconst MenuBar = () => {\r\n  const [activeItem, setActiveItem] = useState(\"home\");\r\n  const handleItemClick = (e, { name }) => setActiveItem(name);\r\n  return (\r\n    <Menu stackable style={{ marginTop: \"5px\" }}>\r\n      <Menu.Item header>Find It</Menu.Item>\r\n\r\n      <Menu.Menu position=\"right\">\r\n        <Menu.Item\r\n          name=\"home\"\r\n          active={activeItem === \"home\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          Home\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name=\"about\"\r\n          active={activeItem === \"about\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          About\r\n        </Menu.Item>\r\n\r\n        <Menu.Item\r\n          name=\"contact\"\r\n          active={activeItem === \"contact\"}\r\n          onClick={handleItemClick}\r\n        >\r\n          Contact\r\n        </Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React from 'react'\r\nimport { Placeholder } from 'semantic-ui-react'\r\n\r\nconst Skeleton = () => (\r\n  <Placeholder fluid>\r\n    <Placeholder.Header image>\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n    </Placeholder.Header>\r\n    <Placeholder.Paragraph>\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n      <Placeholder.Line />\r\n    </Placeholder.Paragraph>\r\n  </Placeholder>\r\n)\r\n\r\nexport default Skeleton","import React from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport moment from \"moment\";\r\n\r\nconst UserItem = ({ result }) => {\r\n  return (\r\n    <Item.Group divided>\r\n      {result &&\r\n        result.map((e, i) => (\r\n          <Item key={i}>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              src=\"https://www.freeiconspng.com/uploads/flat-user-icon-11.png\"\r\n            />\r\n\r\n            <Item.Content>\r\n              <Item.Header>{e.sector}</Item.Header>\r\n              <Item.Meta>\r\n                <span className=\"price\">\r\n                  <b>{e.companyName}</b>\r\n                </span>\r\n              </Item.Meta>\r\n              {e.description && (\r\n                <Item.Description>{e.description}</Item.Description>\r\n              )}\r\n              <Item.Extra>\r\n                {e.facebookLink && <Label>{e.facebookLink}</Label>}\r\n                {e.instagramLink && <Label>{e.instagramLink}</Label>}\r\n                <Label icon=\"address card\" content={e.address} />\r\n                <Label icon=\"mobile alternate\" content={e.telephone} />\r\n                <Label icon=\"language\" content={e.language} />\r\n                <Label icon=\"location arrow\" content={e.map} />\r\n                <Label icon=\"time\" content={moment(e.createdAt).fromNow()} />\r\n              </Item.Extra>\r\n            </Item.Content>\r\n          </Item>\r\n        ))}\r\n    </Item.Group>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Input,\r\n  Grid,\r\n  Dropdown,\r\n  Icon,\r\n  Label,\r\n  Button,\r\n  Header\r\n} from \"semantic-ui-react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\n\r\nconst languageOptions = [\r\n  { key: \"English\", text: \"English\", value: \"English\" },\r\n  { key: \"German\", text: \"German\", value: \"German\" },\r\n  { key: \"Polish\", text: \"Polish\", value: \"Polish\" }\r\n];\r\n\r\nconst mapOptions = [\r\n  { key: \"Wroclaw\", text: \"Wroclaw\", value: \"Wroclaw\" },\r\n  { key: \"Poznan\", text: \"Poznan\", value: \"Poznan\" },\r\n  { key: \"Krakow\", text: \"Krakow\", value: \"Krakow\" },\r\n  { key: \"Warsaw\", text: \"Warsaw\", value: \"Warsaw\" }\r\n];\r\n\r\n\r\n\r\nconst SearchField = ({\r\n  setSearch\r\n}) => {\r\n  \r\n  \r\n  const [language, setLanguage] = useState(\"\");\r\n  const [map, setMap] = useState(\"\");\r\n  const [sector, setSector] = useState(\"\");\r\n  const _handleChangeLanguage = (e, { value }) => {\r\n    setLanguage(value);\r\n  };\r\n  const _handleChangeMap = (e, { value }) => {\r\n    setMap(value);\r\n  };\r\n\r\n  const _handleChangeSearch = (e, { value }) => {\r\n    setSector(value);\r\n  };\r\n  \r\n  const _handleSubmit = () => {\r\n    if (user) {\r\n      setSearch(user);\r\n    }\r\n  };\r\n\r\n  \r\n  const {\r\n    data: { getUser: user }\r\n  } = useQuery(GET_SINGLE_USER, {\r\n    variables: { sector, language, map }\r\n  });\r\n  return (\r\n    <Grid>\r\n      <Grid.Row>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"Select a language\"\r\n            header=\"Select a language\"\r\n            noResultsMessage=\"No result found\"\r\n            search\r\n            onChange={_handleChangeLanguage}\r\n            selection\r\n            clearable\r\n            floating\r\n            fluid\r\n            value={language}\r\n            options={languageOptions}\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          <Input\r\n            icon=\"search\"\r\n            iconPosition=\"left\"\r\n            fluid\r\n            value={sector}\r\n            onChange={_handleChangeSearch}\r\n            placeholder=\"What are you looking for?\"\r\n            action={\r\n              <Button color=\"blue\" onClick={_handleSubmit}>\r\n                <Icon name=\"search\" />\r\n                Search\r\n              </Button>\r\n            }\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column width={3}>\r\n          <Dropdown\r\n            placeholder=\"Select a map\"\r\n            header=\"Select a map\"\r\n            noResultsMessage=\"No result found\"\r\n            search\r\n            onChange={_handleChangeMap}\r\n            floating\r\n            fluid\r\n            selection\r\n            clearable\r\n            value={map}\r\n            options={mapOptions}\r\n          />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Header as=\"h4\" icon=\"filter\" content=\"Filtered: \" />\r\n          {map && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"map\" />\r\n              {map}\r\n            </Label>\r\n          )}\r\n          {language && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"language\" />\r\n              {language}\r\n            </Label>\r\n          )}\r\n          {sector && (\r\n            <Label color=\"blue\">\r\n              <Icon name=\"search\" />\r\n              {sector}\r\n            </Label>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nconst GET_SINGLE_USER = gql`\r\n  query getUser($sector: String, $language: String, $map: String) {\r\n    getUser(sector: $sector, language: $language, map: $map) {\r\n      language\r\n      sector\r\n      companyName\r\n      address\r\n      telephone\r\n      map\r\n      description\r\n      facebookLink\r\n      instagramLink\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\r\n\r\nconst NoResultFound = () => {\r\n  return (\r\n    <Segment placeholder>\r\n      <Header icon>\r\n        <Icon name=\"pdf file outline\" />\r\n        Sorry, we could not find the customer. <br />\r\n        Is that you?\r\n      </Header>\r\n      <Button primary>Apply now</Button>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default NoResultFound;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport gql from \"graphql-tag\";\r\nimport { Grid, Segment } from \"semantic-ui-react\";\r\nimport Skeleton from \"./Skeleton\";\r\nimport UserItem from \"./UserItem\";\r\nimport SearchField from \"./SearchField\";\r\nimport NoResultFound from \"./NoResultFound\";\r\n\r\nconst Dashboard = () => {\r\n  const [result, setResult] = useState([]);\r\n  const {\r\n    loading,\r\n    data: { getUsers: users }\r\n  } = useQuery(FETCH_USER_QUERY);\r\n\r\n  useEffect(() => {\r\n    setResult(users);\r\n  }, [users]);\r\n\r\n  const setSearch = result => {\r\n    setResult(result);\r\n  };\r\n  if (loading)\r\n    return (\r\n      <>\r\n        <Skeleton />\r\n      </>\r\n    );\r\n  return (\r\n    <React.Fragment>\r\n      <SearchField setSearch={setSearch} />\r\n      <Grid style={{ marginTop: \"5px\" }}>\r\n        <Grid.Row>\r\n          <Grid.Column>\r\n            {result && result.length > 0 ? (\r\n              <Segment>\r\n                <UserItem result={result} />\r\n              </Segment>\r\n            ) : (\r\n              <NoResultFound />\r\n            )}\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nconst FETCH_USER_QUERY = gql`\r\n  {\r\n    getUsers {\r\n      language\r\n      sector\r\n      companyName\r\n      address\r\n      telephone\r\n      map\r\n      description\r\n      facebookLink\r\n      instagramLink\r\n      createdAt\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Dashboard;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MenuBar from \"./components/MenuBar\";\nimport { Container } from \"semantic-ui-react\";\nimport Dashboard from \"./components/Dashboard\";\n\nfunction App() {\n  return (\n    <Container>\n      <MenuBar />\n      <Dashboard />\n    </Container>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport App from \"./App\";\r\nimport ApolloClient from \"apollo-client\";\r\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\r\nimport { createHttpLink } from \"apollo-link-http\";\r\nimport { ApolloProvider } from \"@apollo/react-hooks\";\r\n\r\nconst httpLink = createHttpLink({\r\n  // uri: \"https://findit-backend.hakangenc.now.sh\"\r\n  uri: 'http://localhost:5000/'\r\n});\r\n\r\nconst client = new ApolloClient({\r\n  link: httpLink,\r\n  cache: new InMemoryCache()\r\n});\r\n\r\nexport default (\r\n  <ApolloProvider client={client}>\r\n    <App />\r\n  </ApolloProvider>\r\n);\r\n","import ReactDOM from \"react-dom\";\nimport ApolloProvider from \"./ApolloProvider\";\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(ApolloProvider, document.getElementById(\"root\"));\n"],"sourceRoot":""}